<%@ page language="java" contentType="text/html; charset=UTF-8" pageEncoding="UTF-8"%>
<%@ taglib uri="jakarta.tags.core" prefix="c" %>
<%@ taglib uri="jakarta.tags.fmt" prefix="fmt" %>

<!DOCTYPE html>
<html lang="ko">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>DDTOWN 관리자 시스템</title>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css">
    <%-- CSS 파일 경로 수정: ${pageContext.request.contextPath}/resources 를 기준으로 설정 --%>
    <link rel="stylesheet" href="${pageContext.request.contextPath}/resources/css/pages/admin_portal.css">
    <style>
        /* JSP에 직접 스타일을 넣는 것보다 외부 CSS 파일로 분리하는 것이 좋습니다. */
        /* admin_portal.css 또는 다른 CSS 파일로 이 스타일들을 옮기는 것을 권장합니다. */
        .current-time-text {
            font-size: 0.9em;
            color: #666;
            margin-top: 10px;
        }
        .dashboard-grid .card-icon {
            font-size: 2.5em; /* 아이콘 크기 조정 */
            margin-bottom: 10px;
        }
        .dashboard-grid .summary-card .count {
            font-size: 2em; /* 숫자 크기 조정 */
        }
        .emp-sidebar .emp-nav-item.active,
        .emp-sidebar .emp-nav-item.open {
            background-color: #495057; /* 예시 활성/오픈 배경색 */
            color: #fff;
        }
        .emp-submenu {
            /* display: none; */ /* 초기 숨김은 JS로 제어 또는 CSS 수정 */
            padding-left: 20px;
        }
        .emp-submenu a.active {
            font-weight: bold;
            color: var(--primary-color, #007bff); /* 기본값 설정 */
        }
        .submenu-arrow {
            transition: transform 0.3s ease;
            display: inline-block; /* transform 적용을 위해 */
        }
        .emp-nav-item.open .submenu-arrow {
            transform: rotate(90deg);
        }
    </style>
</head>
<body>
    <div class="emp-container">
        <%@ include file="../modules/header.jsp" %>

        <div class="emp-body-wrapper">
            <%@ include file="../modules/aside.jsp" %>

            <main class="emp-content">
                <div class="portal-welcome-message">
                    <h2>DDTOWN 관리자 시스템</h2>
                    <p>환영합니다, <c:out value="${loginAdmin.adminName}" default="관리자"/>님! 왼쪽 메뉴를 통해 각 항목을 관리할 수 있습니다.</p>
                    <p id="current-time-display" class="current-time-text">현재 시간: </p>
                </div>

                <div class="dashboard-grid">
                    <%-- 대시보드 카드 데이터는 컨트롤러에서 Model로 전달받아 표시 --%>
                    <%-- 예: model.addAttribute("dashboardStats", statsVO); --%>
                    <div class="dashboard-card summary-card">
                        <div class="card-icon"><i class="fas fa-user-plus"></i></div>
                        <div class="card-content">
                            <h3>신규 가입 회원</h3>
                            <p class="count"><fmt:formatNumber value="${dashboardStats.newMembersToday != null ? dashboardStats.newMembersToday : 0}" type="number"/> <span class="unit">명</span></p>
                            <p class="description">오늘 가입</p>
                        </div>
                    </div>
                    <div class="dashboard-card summary-card">
                        <div class="card-icon"><i class="fas fa-headset"></i></div>
                        <div class="card-content">
                            <h3>미처리 문의</h3>
                            <p class="count"><fmt:formatNumber value="${dashboardStats.pendingInquiries != null ? dashboardStats.pendingInquiries : 0}" type="number"/> <span class="unit">건</span></p>
                            <a href="${pageContext.request.contextPath}/admin/cs/inquiry/list" class="card-link">문의 관리 바로가기 &rarr;</a>
                        </div>
                    </div>
                    <div class="dashboard-card summary-card">
                        <div class="card-icon"><i class="fas fa-calendar-check"></i></div>
                        <div class="card-content">
                            <h3>오늘 주문 (굿즈샵)</h3>
                            <p class="count"><fmt:formatNumber value="${dashboardStats.todayOrders != null ? dashboardStats.todayOrders : 0}" type="number"/> <span class="unit">건</span></p>
                            <a href="${pageContext.request.contextPath}/admin/goods/orders/list" class="card-link">주문내역 관리 &rarr;</a>
                        </div>
                    </div>
                    <div class="dashboard-card system-status-card">
                        <div class="card-icon"><i class="fas fa-check-circle"></i></div>
                        <div class="card-content">
                            <h3>시스템 상태</h3>
                            <p class="status-text <c:out value="${dashboardStats.systemStatusClass != null ? dashboardStats.systemStatusClass : 'normal'}"/>"><c:out value="${dashboardStats.systemStatusText != null ? dashboardStats.systemStatusText : '정상'}"/></p>
                            <p class="description">모든 서비스 운영 중</p>
                        </div>
                    </div>
                </div>

                <div class="dashboard-notice-grid">
                    <div class="notice-section">
                        <div class="notice-header">
                            <h3><i class="fas fa-rss"></i> 최근 기업 공지사항</h3>
                            <a href="${pageContext.request.contextPath}/admin/notice/list" class="btn-more">더보기 &gt;</a>
                        </div>
                        <ul class="notice-list">
                            <c:if test="${empty recentCorpNotices}">
                                <li>등록된 기업 공지사항이 없습니다.</li>
                            </c:if>
                            <c:forEach var="notice" items="${recentCorpNotices}" varStatus="status" begin="0" end="1"> <%-- 최근 2개만 표시 예시 --%>
                                <li>
                                    <a href="${pageContext.request.contextPath}/admin/notice/detail?id=${notice.entNotiNo}"><c:out value="${notice.entNotiTitle}"/></a>
                                    <span class="date"><fmt:formatDate value="${notice.entNotiRegDate}" pattern="yyyy-MM-dd"/></span>
                                </li>
                            </c:forEach>
                        </ul>
                    </div>
                    <div class="notice-section">
                        <div class="notice-header">
                            <h3><i class="fas fa-store-alt"></i> 최근 굿즈샵 공지</h3>
                            <a href="${pageContext.request.contextPath}/admin/goods/notice/list" class="btn-more">더보기 &gt;</a>
                        </div>
                        <ul class="notice-list">
                             <c:if test="${empty recentGoodsNotices}">
                                <li>등록된 굿즈샵 공지사항이 없습니다.</li>
                            </c:if>
                            <c:forEach var="notice" items="${recentGoodsNotices}" varStatus="status" begin="0" end="1"> <%-- 최근 2개만 표시 예시 --%>
                                <li>
                                    <a href="${pageContext.request.contextPath}/admin/goods/notice/detail?id=${notice.goodsNotiNo}"><c:out value="${notice.goodsNotiTitle}"/></a>
                                    <span class="date"><fmt:formatDate value="${notice.goodsNotiRegDate}" pattern="yyyy-MM-dd"/></span>
                                </li>
                            </c:forEach>
                        </ul>
                    </div>
                </div>
            </main>
        </div>

        <footer class="emp-footer">
            <p>&copy; <fmt:formatDate value="<%=new java.util.Date()%>" pattern="yyyy"/> DDTOWN Entertainment. All rights reserved. (관리자 전용)</p>
        </footer>
    </div>

    <script>
        // 로그아웃 기능 (실제 로그아웃 처리는 서버에서)
        const logoutButton = document.getElementById('adminLogoutBtn');
        if (logoutButton) {
            logoutButton.addEventListener('click', function(e) {
                e.preventDefault();
                if (confirm('로그아웃 하시겠습니까?')) {
                    // 실제 로그아웃 URL로 이동
                    window.location.href = '${pageContext.request.contextPath}/admin/logout';
                }
            });
        }

        // 현재 시간 표시 기능
        function updateCurrentTime() {
            const now = new Date();
            const year = now.getFullYear();
            const month = String(now.getMonth() + 1).padStart(2, '0');
            const day = String(now.getDate()).padStart(2, '0');
            const hours = now.getHours();
            const ampm = hours >= 12 ? '오후' : '오전';
            const displayHours = String(hours % 12 || 12).padStart(2, '0');
            const minutes = String(now.getMinutes()).padStart(2, '0');
            const seconds = String(now.getSeconds()).padStart(2, '0');
            
            const timeString = `${year}. ${month}. ${day}. ${ampm} ${displayHours}:${minutes}:${seconds}`;
            const timeDisplayElement = document.getElementById('current-time-display');
            if (timeDisplayElement) {
                 timeDisplayElement.textContent = "현재 시간: " + timeString;
            }
        }
        // current-time-display 요소가 있을 때만 시간 업데이트 실행
        if (document.getElementById('current-time-display')) {
            setInterval(updateCurrentTime, 1000);
            updateCurrentTime(); // 페이지 로드 시 즉시 호출
        }


        // 사이드바 메뉴 기능 (기존 HTML의 스크립트 로직 유지, URL은 JSP에 맞게 수정됨)
        document.addEventListener('DOMContentLoaded', function() {
            const navItemsWithSubmenu = document.querySelectorAll('.emp-sidebar .emp-nav-item.has-submenu');
            navItemsWithSubmenu.forEach(item => {
                const arrow = item.querySelector('.submenu-arrow');
                item.addEventListener('click', function(event) {
                    // 링크 이동을 막지 않으려면 아래 주석 처리 (href="#" 인 경우에만 막는 것이 좋음)
                    if (this.getAttribute('href') === '#') {
                        event.preventDefault();
                    }

                    const parentLi = this.parentElement;
                    const submenu = this.nextElementSibling;

                    // 다른 열린 서브메뉴 닫기
                    if (submenu && submenu.classList.contains('emp-submenu')) {
                        const parentUl = parentLi.parentElement;
                        if (parentUl) {
                            Array.from(parentUl.children).forEach(siblingLi => {
                                if (siblingLi !== parentLi) {
                                    const siblingSubmenuControl = siblingLi.querySelector('.emp-nav-item.has-submenu.open');
                                    if (siblingSubmenuControl) {
                                        const siblingSubmenu = siblingSubmenuControl.nextElementSibling;
                                        siblingSubmenuControl.classList.remove('open');
                                        if (siblingSubmenu && siblingSubmenu.classList.contains('emp-submenu')) {
                                            siblingSubmenu.style.display = 'none';
                                        }
                                        const siblingArrow = siblingSubmenuControl.querySelector('.submenu-arrow');
                                        if (siblingArrow) siblingArrow.style.transform = 'rotate(0deg)';
                                    }
                                }
                            });
                        }
                    }
                    
                    // 현재 클릭한 메뉴 토글
                    this.classList.toggle('open');
                    if (submenu && submenu.classList.contains('emp-submenu')) {
                        submenu.style.display = this.classList.contains('open') ? 'block' : 'none';
                        if (arrow) arrow.style.transform = this.classList.contains('open') ? 'rotate(90deg)' : 'rotate(0deg)';
                    }
                });
            });

            // 현재 URL을 기반으로 활성 메뉴 표시
            const currentFullHref = window.location.href;
            const contextPath = "${pageContext.request.contextPath}";

            document.querySelectorAll('.emp-sidebar .emp-nav-item[href]').forEach(link => {
                const linkHrefAttribute = link.getAttribute('href');
                // 링크가 #이 아니고, 현재 URL이 해당 링크로 끝나는 경우 (컨텍스트 경로 고려)
                if (linkHrefAttribute && linkHrefAttribute !== "#") {
                    const fullLinkPath = (linkHrefAttribute.startsWith(contextPath) ? linkHrefAttribute : contextPath + linkHrefAttribute);
                    // URL이 정확히 일치하거나, 현재 URL이 링크로 시작하고 추가 파라미터가 있는 경우도 고려할 수 있음
                    // 여기서는 단순 endsWith 대신, URL 객체를 사용하여 경로만 비교하는 것이 더 정확할 수 있습니다.
                    // 간단하게는 아래와 같이 처리:
                    if (currentFullHref.includes(fullLinkPath)) { // includes로 변경하여 파라미터가 있어도 매칭되도록
                        link.classList.add('active');
                        let currentActiveElement = link;
                        // 부모 서브메뉴 펼치기
                        while (true) {
                            const parentLi = currentActiveElement.parentElement;
                            if (!parentLi) break;
                            const parentSubmenuUl = parentLi.closest('.emp-submenu');
                            if (parentSubmenuUl) {
                                parentSubmenuUl.style.display = 'block';
                                const controllingAnchor = parentSubmenuUl.previousElementSibling;
                                if (controllingAnchor && controllingAnchor.tagName === 'A' && controllingAnchor.classList.contains('has-submenu')) {
                                    controllingAnchor.classList.add('active', 'open');
                                    const arrow = controllingAnchor.querySelector('.submenu-arrow');
                                    if (arrow) {
                                        arrow.style.transform = 'rotate(90deg)';
                                    }
                                    currentActiveElement = controllingAnchor;
                                } else {
                                    break;
                                }
                            } else {
                                break;
                            }
                        }
                    }
                }
            });
        });
    </script>
</body>
</html>
