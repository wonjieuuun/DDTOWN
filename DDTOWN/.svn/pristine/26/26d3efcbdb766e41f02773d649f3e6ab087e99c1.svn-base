<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
 <mapper namespace="kr.or.ddit.security.mapper.ISecMemberMapper">
 
 	
 	<resultMap type="MemberVO" id="memberMap">
 		<id property="memUsername" column="mem_username"/>
 		<result property="memStatCode" column="mem_stat_code" />
 		<result property="memRegPath" column="mem_reg_path" />
 		<result property="memNicknm" column="mem_nicknm" />
 		<result property="memBirth" column="mem_birth" />
 		<result property="memZipCode" column="mem_zip_code" />
 		<result property="memAddress1" column="mem_address1" />
 		<result property="memAddress2" column="mem_address2" />
 		<result property="memModDate" column="mem_mod_date" />
 		<result property="memRegDate" column="mem_reg_date" />
 		
 		<!-- 공통 VO(PeopleVO)  -->
 		<result property="username" column="username" />
 		<result property="password" column="password" />
 		<result property="userTypeCode" column="user_type_code" />
 		<result property="peoEnabled" column="peo_enabled" />
 		<result property="peoFirstNm" column="peo_first_nm" />
 		<result property="peoLastNm" column="peo_last_nm" />
 		<result property="peoEmail" column="peo_email" />
 		<result property="peoGender" column="peo_gender" />
 		<result property="peoPhone" column="peo_phone" />
 		<result property="peoName" column="peoName"/>
 		<collection property="authList" resultMap="authMap" />
 	</resultMap>
 	
 	<resultMap type="kr.or.ddit.vo.user.EmployeeVO" id="employMap">
 		<id property="empUsername" column="EMP_USERNAME"/>
 		<result property="empUsername" column="EMP_USERNAME"/>
		<result property="empDepartCode" column="EMP_DEPART_CODE"/>
		<result property="empPositionCode" column="EMP_POSITION_CODE"/>
		<result property="empRegDate" column="EMP_REG_DATE"/>
		<result property="empEndDate" column="EMP_END_DATE"/>
		
		<!-- 공통 VO(PeopleVO)  -->
 		<result property="username" column="username" />
 		<result property="password" column="password" />
 		<result property="userTypeCode" column="user_type_code" />
 		<result property="peoEnabled" column="peo_enabled" />
 		<result property="peoFirstNm" column="peo_first_nm" />
 		<result property="peoLastNm" column="peo_last_nm" />
 		<result property="peoEmail" column="peo_email" />
 		<result property="peoGender" column="peo_gender" />
 		<result property="peoPhone" column="peo_phone" />
 		<result property="peoName" column="peoName"/>
 		<collection property="authList" resultMap="authMap" />
 	</resultMap>
 	
 	<resultMap type="PeopleAuthVO" id="authMap">
 		<result property="username" column="username" />
 		<result property="auth" column="auth" />
 	</resultMap>
 
	<select id="readByUserInfoMember" parameterType="string" resultMap="memberMap">
		select
 			p.username, password, peo_enabled, user_type_code, peo_first_nm, peo_last_nm, peo_email, peo_gender, peo_phone, peo_last_nm || peo_first_nm as peoName ,
 			auth,
 			mem_username, mem_stat_code, mem_reg_path, mem_nicknm, mem_birth, mem_zip_code, 
 			mem_address1, mem_address2, mem_mod_date, mem_reg_date
 		from
 			member m left outer join people p on(m.mem_username = p.username)
 			left outer join people_auth pa on(m.mem_username = pa.username)
 		where 
 			p.username = #{username}
	</select>
	
	<select id="readByUserInfoEmployee" parameterType="string" resultMap="employMap">
		select
 			p.username, password, peo_enabled, user_type_code, peo_first_nm, peo_last_nm, peo_email, peo_gender, peo_phone, peo_last_nm || peo_first_nm as peoName ,
 			auth,
 			emp_username, emp_depart_code, emp_position_code, emp_reg_date, emp_end_date
 		from
 			employee m left outer join people p on(m.emp_username = p.username)
 			left outer join people_auth pa on(m.emp_username = pa.username)
 		where 
 			p.username = #{username}
	</select>
 	
 	<select id="selectByMemUsernameOAuth2" parameterType="kr.or.ddit.vo.user.MemberVO" resultMap="memberMap">
 		select
 			p.username, password, peo_enabled, user_type_code, peo_first_nm, peo_last_nm, peo_email, peo_gender, peo_phone, peo_last_nm || peo_first_nm as peoName ,
 			auth,
 			mem_username, mem_stat_code, mem_reg_path, mem_nicknm, mem_birth, mem_zip_code, 
 			mem_address1, mem_address2, mem_mod_date, mem_reg_date
 		from
 			member m left outer join people p on(m.mem_username = p.username)
 			left outer join people_auth pa on(m.mem_username = pa.username)
 		where 
 			p.username = #{username}
 	</select>
 	
 	<insert id="insertPeopleByOAuth2" parameterType="kr.or.ddit.vo.user.MemberVO" useGeneratedKeys="true">
 		<selectKey keyProperty="userTypeCode" order="BEFORE" resultType="string">
 			select 'MEMBER' from dual
 		</selectKey>
 		insert into people(
 			username, user_type_code , peo_first_nm, peo_last_nm, peo_email
		) values (
			#{username}, #{userTypeCode}, #{peoFirstNm}, #{peoLastNm}, #{peoEmail}
		)
 	</insert>
 	<insert id="insertMemberByOAuth2" parameterType="kr.or.ddit.vo.user.MemberVO" useGeneratedKeys="true">
 		<selectKey keyProperty="memStatCode" order="BEFORE" resultType="string">
 			select 'MSC001' from dual
 		</selectKey>
 		insert into member(
 			mem_username, mem_nicknm, mem_stat_code
 			,mem_reg_path,mem_reg_date, mem_mod_date
		) values (
			#{username}, #{memNicknm},#{memStatCode},#{memRegPath}, sysdate, sysdate
		)
 	</insert>
 	
 	<insert id="insertAuthByOAuth2" parameterType="kr.or.ddit.vo.user.PeopleAuthVO">
 		insert into people_auth(
 			username, auth
 		) values(
 			#{username}, #{auth}
 		)
 	</insert>
 	
 </mapper>