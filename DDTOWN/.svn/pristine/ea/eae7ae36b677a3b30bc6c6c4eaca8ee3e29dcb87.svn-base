<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
 <mapper namespace="kr.or.ddit.ddtown.mapper.IUserMapper">
 
 	<resultMap type="kr.or.ddit.vo.user.MemberVO" id="memberMap">
 		<id property="memUsername" column="mem_username"/>
 		<result property="memStatCode" column="mem_stat_code" />
 		<result property="memRegPath" column="mem_reg_path" />
 		<result property="memNicknm" column="mem_nicknm" />
 		<result property="memBirth" column="mem_birth" />
 		<result property="memZipCode" column="mem_zip_code" />
 		<result property="memAddress1" column="mem_address1" />
 		<result property="memAddress2" column="mem_address2" />
 		<result property="memModDate" column="mem_mod_date" />
 		<result property="memRegDate" column="mem_reg_date" />
 		
 		<!-- 공통 VO(PeopleVO)  -->
 		<result property="username" column="username" />
 		<result property="password" column="password" />
 		<result property="peoEnabled" column="peo_enabled" />
 		<result property="peoFirstNm" column="peo_first_nm" />
 		<result property="peoLastNm" column="peo_last_nm" />
 		<result property="peoEmail" column="peo_email" />
 		<result property="peoGender" column="peo_gender" />
 		<result property="peoPhone" column="peo_phone" />
 		<result property="peoName" column="peoName"/>
 		<collection property="authList" resultMap="authMap" />
 	</resultMap>
 	
 	<resultMap type="kr.or.ddit.vo.user.PeopleAuthVO" id="authMap">
 		<result property="username" column="username" />
 		<result property="auth" column="auth" />
 	</resultMap>
 
	
 	<select id="idCheck" parameterType="string" resultType="int">
 		select count(username)
 		from people
 		where username = #{username}
 	</select>
 	
 	<select id="nickCheck" parameterType="string" resultType="int">
 		select count(mem_nicknm)
 		from member
 		where mem_nicknm = #{memNicknm}
 	</select>
 	
 	<select id="emailCheck" parameterType="string" resultType="int">
 		select count(*)
 		from people
 		where peo_email = #{peoEmail}
 	</select>
 	
 	
 	<insert id="registerPeople" parameterType="kr.or.ddit.vo.user.MemberVO" useGeneratedKeys="true">
 		<selectKey keyProperty="userTypeCode" order="BEFORE" resultType="string">
 			select 'UTC001' from dual
 		</selectKey>
 		insert into people(
 			username, password, user_type_code, peo_first_nm, peo_last_nm, peo_email,peo_phone, peo_gender
		) values (
			#{username},#{password}, #{userTypeCode}, #{peoFirstNm}, #{peoLastNm}, #{peoEmail},#{peoPhone}, #{peoGender}
		)
 	</insert>
 	<insert id="registerMember" parameterType="kr.or.ddit.vo.user.MemberVO" useGeneratedKeys="true">
 		<selectKey keyProperty="memStatCode" order="BEFORE" resultType="string">
 			select 'MSC001' from dual
 		</selectKey>
 		insert into member(
 			mem_username, mem_nicknm, mem_stat_code
 			,mem_reg_path,mem_reg_date, mem_mod_date, mem_birth
		) values (
			#{username}, #{memNicknm},#{memStatCode},#{memRegPath}, sysdate, sysdate, #{memBirth}
		)
 	</insert>
 	<insert id="registerAuth" parameterType="string">
 		insert into people_auth (
 			username, auth
 		) values (
 			#{username}, 'ROLE_MEMBER'
 		)
 	</insert>
 	
 	<select id="findId" parameterType="kr.or.ddit.vo.user.MemberVO" resultType="string">
 		select username
 		from people
 		where peo_email = #{peoEmail}
 		and peo_last_nm || peo_first_nm = #{peoName}
 	</select>
 	
 </mapper>