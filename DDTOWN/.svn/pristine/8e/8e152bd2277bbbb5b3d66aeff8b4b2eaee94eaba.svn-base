package kr.or.ddit.ddtown.controller.inquiry;

import java.util.Date;
import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.boot.autoconfigure.security.SecurityProperties.User;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.security.core.context.SecurityContextHolder;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

import kr.or.ddit.ServiceResult;
import kr.or.ddit.ddtown.service.inquiry.InquiryService;
import kr.or.ddit.vo.inquiry.InquiryCodeVO;
import kr.or.ddit.vo.inquiry.InquiryVO;
import kr.or.ddit.vo.security.CustomOAuth2User;
import kr.or.ddit.vo.security.CustomUser;
import kr.or.ddit.vo.user.MemberVO;
import lombok.extern.slf4j.Slf4j;

@Slf4j
@RestController
@RequestMapping("/inquiry")
public class InquiryController {

	@Autowired
	private InquiryService inquiryService;
	
	@GetMapping("/list")
	public ResponseEntity<List<InquiryVO>> inquiryMain(Model model) {
		Object principal = SecurityContextHolder.getContext().getAuthentication().getPrincipal();
        MemberVO memberVO = null;
        if(principal instanceof CustomUser) {
            memberVO = ((CustomUser) principal).getMemberVO();
        }else if(principal instanceof CustomOAuth2User) {
            memberVO = ((CustomOAuth2User) principal).getMemberVO();
        }
		
		List<InquiryVO> list = inquiryService.getList(memberVO);
		
		return new ResponseEntity<List<InquiryVO>>(list,HttpStatus.OK);
	}
	
	// 1:1 등록폼 페이지
	@GetMapping("/form")
	public String inquiryInsertForm(Model model) {
		
		log.info("1:1 등록페이지 이동");
		
		Object principal = SecurityContextHolder.getContext().getAuthentication().getPrincipal();
        MemberVO memberVO = null;
        if(principal instanceof CustomUser) {
            memberVO = ((CustomUser) principal).getMemberVO();
        }else if(principal instanceof CustomOAuth2User) {
            memberVO = ((CustomOAuth2User) principal).getMemberVO();
        }
		
		String name = memberVO.getPeoLastNm() + memberVO.getPeoFirstNm();
		
		List<InquiryCodeVO> codeList = inquiryService.getCodeList();
		
		log.info("코드 리스트 : " + codeList);
		
		model.addAttribute("name", name);
		model.addAttribute("codeList", codeList);
		
		return "inquiry/form";
	}
	
	// 1:1 문의 등록
	@PostMapping("/insert")
	public String inquiryInsertData(InquiryVO inquiryVO) {
		
		log.info("1:1문의 등록 실행");
		log.info("VO : " + inquiryVO);
		
		// 접속중인 사용자 정보
		Object principal = SecurityContextHolder.getContext().getAuthentication().getPrincipal();
        MemberVO memberVO = null;
        if(principal instanceof CustomUser) {
            memberVO = ((CustomUser) principal).getMemberVO();
        }else if(principal instanceof CustomOAuth2User) {
            memberVO = ((CustomOAuth2User) principal).getMemberVO();
        }
		
        inquiryVO.setMemUsername(memberVO.getMemUsername());
        
        ServiceResult result = inquiryService.insertData(inquiryVO);
        
        log.info("결과 : " + result);
        
		
		return "inquiry/main";
	}
	
	@GetMapping("/detail/{inqNo}")
	public String inquiryDetail(@PathVariable int inqNo, Model model) {
		
		log.info("1:1문의 상세페이지 요청");
		log.info("inqNo : " + inqNo);
		
		InquiryVO inq = inquiryService.getDetail(inqNo);
		
		model.addAttribute("inq", inq);
		
		return "inquiry/detail";
	}
	
}
